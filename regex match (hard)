class Solution:
    def isMatch(self, text: str, pattern: str) -> bool:
        
        
        len_text, len_pattern = len(text), len(pattern)
        twoD = [[False] * (len_pattern + 1) for _ in range(len_text + 1)]
        twoD[0][0] = True

        
        for j in range(1, len_pattern + 1):
            if pattern[j - 1] == '*':
                twoD[0][j] = twoD[0][j - 2]

        
        for i in range(1, len_text + 1):
            for j in range(1, len_pattern + 1):
                if pattern[j - 1] in {text[i - 1], '.'}:
                    twoD[i][j] = twoD[i - 1][j - 1]
                elif pattern[j - 1] == '*':
                    twoD[i][j] = twoD[i][j - 2] or (twoD[i - 1][j] if pattern[j - 2] in {text[i - 1], '.'} else False)

        return twoD[len_text][len_pattern]


